<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-fixed-top">
        <div class="navbar-inner">
            <div class="container">
                <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <a class="brand" href="/">p4rty</a>
                <div class="pull-right">
                    <section id="login">
                        @Html.Partial("_LoginPartial")
                    </section>
                </div>
                @using (Html.BeginForm("Search", "Home", FormMethod.Post, new { @class = "navbar-search pull-right" }))
                {
                    <div class="input-append">
                        <input name="query" placeholder="search for music" type="search" class="span3" />
                        <button class="btn"><i class="icon-search"></i></button>
                    </div>
                }
                <div class="btn-group pull-right" style="margin-right: 4px;">
                    <button type="button" class="play btn" style="display: none"><i class="icon-play"></i></button>
                    <button type="button" class="pause btn" style="display: none"><i class="icon-pause"></i></button>
                    <button type="button" class="volume-down btn"><i class="icon-volume-down"></i></button>
                    <button type="button" class="volume-up btn"><i class="icon-volume-up"></i></button>
                </div>
                <div class="nav-collapse">
                    <ul class="nav">
                        <li id="home">@Html.ActionLink("HOME", "Index", "Home")</li>
                        <li id="playlist">@Html.ActionLink("PLAYLIST", "Playlist", "Home")</li>
                        @if (Request.IsAuthenticated)
                        {
                            <li id="favorites">@Html.ActionLink("FAVORITES", "Favorites", "Home")</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div id="queue-change-list" style="position: fixed; bottom: 80px"></div>

    <div class="navbar navbar-inverse navbar-fixed-bottom">
        <div class="navbar-inner">
            <div>
                <div class="row-fluid">
                    <div class="span4 well-small">
                        <div id="now-playing" class="pagination-centered">
                            <div class="img-container">
                                <div id="now-playing-image"></div>
                            </div>
                            <div class="inner">
                                <div id="now-playing-metadata" class="now-playing-metadata"></div>
                                <span id="time-elapsed" class="now-playing-time"></span>
                                <div id="now-playing-progress" class="progress">
                                    <div id="progress-bar" class="bar" style="width: 0%;"></div>
                                </div>
                                <span id="time-total" class="now-playing-time"></span>
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div id="now-playing-queue-container" style="display: none">
                            <strong>Upcoming songs</strong>
                            <ol start="2" id="now-playing-queue"></ol>
                        </div>
                    </div>
                    <div class="span4">
                        <div id="now-playing-similar-container" style="display: none">
                            <strong id="now-playing-similar-title">Similar artists</strong>
                            <ul id="now-playing-similar"></ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @RenderBody()

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs"></script>
    @Scripts.Render("~/bundles/app")
    <script>
        $(function () {
            window.hubReady = $.connection.hub.start();

            hubEvents.addSongChangedListener(function (data) {
                updateNowPlayingMetadata(data);
                updateSimilarArtists(data);
            });

            hubEvents.addQueueChangedListener(function (data) {
                updateNowPlayingQueue(data);
            });

            hubEvents.addQueueItemAddedListener(function (data) {
                var item = $(
                    "<div class='well well-small' style='display:none;min-width:128'>" +
                        "<h4>" + data.Item.Name + "</h4>" +
                        "<p>" + data.Item.Description + "</p>" +
                        "<div style='font-size: 16px;'>" +
                            "<i class='icon-plus-sign text-info'> Added to playlist</i>" +
                        "</div>" +
                    "</div>");

                $("#queue-change-list").append(item);
                item.fadeIn().delay(3000).fadeOut(500, function () { $(this).remove(); });
            });

            hubEvents.addIsPlayingChangedListener(function (data) {
                hideOrShowControlButtons(data.IsPlaying, data.CurrentSong);
            });

            hubEvents.addProgressListener(function (data) {
                $("#time-elapsed").html(new Date().clearTime().addSeconds(data.Current).toString('m:ss'));
                $("#time-total").html(new Date().clearTime().addSeconds(data.Total).toString('m:ss'));
                $("#progress-bar").css('width', (data.Current / data.Total) * 100 + '%');
            });

            hubEvents.addBufferingListener(function (data) {
                if (data.Current < data.Total) {
                    if (!$("#now-playing-progress").hasClass("progress-striped")) {
                        $("#now-playing-progress").toggleClass("progress-striped");
                        $("#now-playing-progress").toggleClass("active");
                    }
                }
                else {
                    if ($("#now-playing-progress").hasClass("progress-striped")) {
                        $("#now-playing-progress").toggleClass("progress-striped");
                        $("#now-playing-progress").toggleClass("active");
                    }
                }
            });

            var hub = $.connection.mainHub;

            window.hubReady.done(function () {
                hub.isPlaying()
                    .done(function (result) {
                        hideOrShowControlButtons(result.IsPlaying, result.CurrentSong);
                    })
                    .fail(function (error) { console.log(error); });

                hub.currentSong()
                    .done(function (result) {
                        updateNowPlayingMetadata(result);
                        updateSimilarArtists(result);
                    })
                    .fail(function (error) { console.log(error); });

                hub.getQueue()
                    .done(function (result) { updateNowPlayingQueue(result); })
                    .fail(function (error) { console.log(error); });
            });
        });

        function hideOrShowControlButtons(isPlaying, currentSong) {
            if (currentSong != null) {
                if (isPlaying) {
                    $(".play").hide();
                    $(".pause").show();
                }
                else {
                    $(".play").show();
                    $(".pause").hide();
                }
            }
            else if (currentSong == null) {
                $("#now-playing").hide();
            }
        }

        function updateNowPlayingMetadata(song) {
            $("#now-playing-metadata").empty();
            if (song != null) {
                $("#now-playing").show();
                var songLink = $("<a href='#'>" + song.Name + "</a>");
                var bySpan = $("<span> by </span>");
                var artistLink = $("<a href='/home/search?query=" + song.Artist.Name + "'>" + song.Artist.Name + "</a>");
                var image = $("<img width=64 height=64></img>").attr('src', "/api/imageresize/resize?url=" + song.Album.CoverArt + "&maxwidth=70&maxheight=70&mode=crop&format=jpg");

                $("#now-playing-image").empty();
                $("#now-playing-image").append(image);
                $("#now-playing-metadata").append(songLink).append(bySpan).append(artistLink);
            }
            else {
                $("#now-playing").hide();
                $("#now-playing-similar-container").hide();
            }
        }

        function updateNowPlayingQueue(queue) {
            $("#now-playing-queue").empty();

            if (queue.length <= 1) {
                $("#now-playing-queue-container").hide();
                return;
            }

            var upcomingSongs = queue.slice(1, 4);

            for (var i = 0; i < upcomingSongs.length; i++) {
                var queued = upcomingSongs[i];

                var songLink = $("<a href='/home/search?query=" + queued.Item.Artist.Name + " " + queued.Item.Name + "'>" + queued.Item.Name + "</a>");
                var bySpan = $("<span> by </span>");
                var artistLink = $("<a href='/home/search?query=" + queued.Item.Artist.Name + "'>" + queued.Item.Artist.Name + "</a>");
                var voteButtons = $(
                    "<div class='now-playing-queue-vote btn-group pull-right'>" +
                        "<button class='btn btn-success btn-mini' onclick=upvoteById(" + queued.Id + ")><i class='icon-thumbs-up'> " + queued.Upvotes + "</i></button>" +
                        "<button class='btn btn-danger btn-mini' onclick=downvoteById(" + queued.Id + ")><i class='icon-thumbs-down'> " + queued.Downvotes + "</i></button>" +
                    "</div>");

                var listItem = $("<li style='position:relative'></li>");
                var metadataDiv = $("<div class='now-playing-queue-metadata'></div>").append(songLink).append(bySpan).append(artistLink);
                listItem.append(metadataDiv).append(voteButtons);
                $("#now-playing-queue").append(listItem);
            }

            $("#now-playing-queue-container").show();
        }

        function updateSimilarArtists(song) {
            $("#now-playing-similar").empty();
            if (song != null) {

                $("#now-playing-similar-title").html("Similar artists to " + song.Artist.Name);

                var myNest = nest.nest("RJOXXESVUVZ07WY1T");
                var myArtist = myNest.artist({ name: song.Artist.Name });

                myArtist.similar({ results: 3 }, function (err, results) {
                    if (err) {
                        console.error("there was an error...");
                        return;
                    }

                    $.each(results.artists, function (index, value) {
                        $("#now-playing-similar").append("<li><a href=\"/Home/Search?query=" + value.name + "\">" + value.name + "</a></li>");
                    });

                    $("#now-playing-similar-container").show();
                });
            }
            else {
                $("#now-playing-similar-container").hide();
            }
        }
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
