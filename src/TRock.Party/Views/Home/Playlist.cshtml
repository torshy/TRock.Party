@{
    ViewBag.Title = "Playlist";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="page-header">
        <h1>Playlist <small>Vote on your favorite songs!</small></h1>
    </div>

    <div class="row-fluid" id="playlist-empty" style="display: none">
        <div class="span1"></div>
        <div class="span10">
            <div style="font-size: 24px;">
                <i class="icon-list-alt"> It's <strong>empty</strong>!</i>
            </div>
        </div>
        <div class="span1"></div>
    </div>

    <div class="row-fluid" id="playlist-row" style="display: none">
        <div class="span1"></div>
        <div class="span10">
            <table id="playlist" class="table table-striped table-bordered table-hover table-condensed">
                <thead>
                    <tr>
                        <th></th>
                        <th>Track</th>
                        <th>Artist</th>
                        <th>Time</th>
                        <th>Album</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="span1"></div>
    </div>

    <div class="row-fluid" id="history-row" style="display: none">
        <div class="span1"></div>
        <div class="span10">
            <h3>History</h3>
            <table id="history" class="table table-striped table-bordered table-hover table-condensed">
                <thead>
                    <tr>
                        <th></th>
                        <th>Track</th>
                        <th>Artist</th>
                        <th>Time</th>
                        <th>Album</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="span1"></div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {
            hubEvents.addQueueChangedListener(function (data) {
                preparePlaylist();
            });

            hubEvents.addSongChangedListener(function (data) {
                prepareHistory();
            });

            window.hubReady.done(function () {
                preparePlaylist();
                prepareHistory();
            });
        });
        
        $("#history tbody tr").live("dblclick", function (e) {
            if (!$(e.target).is('a') && !$(e.target).is('button')) {
                e.stopPropagation();
                var song = $(this).data("song");

                $.ajax({
                    type: 'POST',
                    dataType: "json",
                    data: song,
                    url: encodeURI("/api/EnqueueSong/")
                });
            }
        });

        function preparePlaylist() {
            $.ajax({
                type: 'GET',
                url: "/api/queue",
                success: function (data) {

                    var tbody = $("#playlist > tbody");
                    tbody.empty();

                    $.each(data, function (index, queued) {

                        var item = null;

                        if (queued.ItemType == "song") {
                            item = $(
                                "<tr>" +
                                    "<td>" + "</td>" +
                                    "<td>" + queued.Item.Name + "</td>" +
                                    "<td><a href='/home/search?query=" + queued.Item.Artist.Name + "'>" + queued.Item.Artist.Name + "</a></td>" +
                                    "<td class='muted'><span class='pull-right'>" + new Date().clearTime().addSeconds(queued.Item.TotalSeconds).toString('m:ss') + "</span></td>" +
                                    "<td><a href='/home/search?query=" + queued.Item.Artist.Name + " " + queued.Item.Album.Name + "'>" + queued.Item.Album.Name + "</a></td>" +
                                    "<td>" +
                                    "<div class='btn-group pull-right'>" +
                                    "<button class='btn btn-success btn-mini' onclick=upvoteById(" + queued.Id + ")><i class='icon-thumbs-up'> " + queued.Upvotes + "</i></button>" +
                                    "<button class='btn btn-danger btn-mini' onclick=downvoteById(" + queued.Id + ")><i class='icon-thumbs-down'> " + queued.Downvotes + "</i></button>" +
                                    "</div>" +
                                    "</td>" +
                                    "</tr>").data("song", queued);
                        }
                        else if (queued.ItemType == "songs") {
                            item = $(
                                "<tr>" +
                                    "<td>" + "</td>" +
                                    "<td>" + queued.Item.Name + "</td>" +
                                    "<td></td>" +
                                    "<td class='muted'</span></td>" +
                                    "<td>" + queued.Item.Description + "</td>" +
                                    "<td>" +
                                    "<div class='btn-group pull-right'>" +
                                    "<button class='btn btn-inverse btn-mini' onclick=moveToNext()><i class='icon-forward'></i></button>" +
                                    "<button class='btn btn-success btn-mini' onclick=upvoteById(" + queued.Id + ")><i class='icon-thumbs-up'> " + queued.Upvotes + "</i></button>" +
                                    "<button class='btn btn-danger btn-mini' onclick=downvoteById(" + queued.Id + ")><i class='icon-thumbs-down'> " + queued.Downvotes + "</i></button>" +
                                    "</div>" +
                                    "</td>" +
                                    "</tr>").data("song", queued);
                        }

                        if (item != null) {
                            tbody.append(item);
                        }
                    });

                    if (data.length > 0) {
                        $("#playlist-row").show();
                        $("#playlist-empty").hide();
                    }
                    else {
                        $("#playlist-row").hide();
                        $("#playlist-empty").show();
                    }
                },
                dataType: "json"
            }).fail(function (xhRequest, errorText, thrownError) {
                alert("Sowwy! Unable to fetch playlist. " + thrownError);
            });
        }

        function prepareHistory() {
            $.ajax({
                type: 'GET',
                url: "/api/songhistory/history",
                success: function (data) {

                    var tbody = $("#history > tbody");
                    tbody.empty();

                    $.each(data, function (index, queued) {

                        var item = $(
                            "<tr>" +
                                "<td>" + "</td>" +
                                "<td>" + queued.Name + "</td>" +
                                "<td><a href='/home/search?query=" + queued.Artist.Name + "'>" + queued.Artist.Name + "</a></td>" +
                                "<td class='muted'><span class='pull-right'>" + new Date().clearTime().addSeconds(queued.TotalSeconds).toString('m:ss') + "</span></td>" +
                                "<td><a href='/home/search?query=" + queued.Artist.Name + " " + queued.Album.Name + "'>" + queued.Album.Name + "</a></td>" +
                                "</tr>").data("song", queued);

                        tbody.append(item);
                    });

                    if (data.length > 0) {
                        $("#history-row").show();
                    }
                    else {
                        $("#history-row").hide();
                    }
                },
                dataType: "json"
            }).fail(function (xhRequest, errorText, thrownError) {
                alert("Sowwy! Unable to fetch song history. " + thrownError);
            });
        }
    </script>
}
