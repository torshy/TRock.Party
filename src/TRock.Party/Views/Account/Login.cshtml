@model TRock.Party.Models.LoginModel

@{
    ViewBag.Title = "Log in";
}

<div class="container-fluid">
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>

    <div class="row-fluid">
        <div class="span1"></div>
        <div class="span5">
            <section id="loginForm">
                <h2>Use a local account to log in.</h2>
                @using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <fieldset>
                        <legend>Log in Form</legend>
                        <ol>
                            <li>
                                @Html.LabelFor(m => m.UserName)
                                @Html.TextBoxFor(m => m.UserName)
                                @Html.ValidationMessageFor(m => m.UserName)
                            </li>
                            <li>
                                @Html.LabelFor(m => m.Password)
                                @Html.PasswordFor(m => m.Password)
                                @Html.ValidationMessageFor(m => m.Password)
                            </li>
                            <li>
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
                            </li>
                        </ol>
                        <input type="submit" value="Log in" />
                    </fieldset>
                    <p>
                        @Html.ActionLink("Register", "Register") if you don't have an account.
                    </p>
                }
            </section>
        </div>
        <div class="span5">
            <section id="externalLoginForm">
                <h2>Use another service to log in.</h2>
                @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
        <div class="span1"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
